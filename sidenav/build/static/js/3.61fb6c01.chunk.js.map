{"version":3,"sources":["components/cards/MiniCardComponent.js","routes/dashboard/TodayTrendsComponent.js","components/cards/CardComponent.js","routes/dashboard/UnresolvedTicketsComponent.js","routes/dashboard/TasksComponent.js","routes/dashboard/TrafficAnalysis.js","routes/dashboard/index.js"],"names":["createUseStyles","theme","container","backgroundColor","border","color","lightGrayishBlue2","borderRadius","cursor","maxWidth","padding","borderColor","lightBlue","title","typography","cardTitle","grayishBlue2","marginBottom","minWidth","textAlign","value","veryDarkGrayishBlue","fontWeight","fontSize","letterSpacing","lineHeight","MiniCardComponent","data","x","push","y","Math","floor","random","graphContainer","marginTop","marginLeft","marginRight","width","graphSection","graphSubtitle","smallSubtitle","graphTitle","legendTitle","separator","statContainer","borderBottom","height","stats","borderTop","statTitle","whiteSpace","statValue","containerMobile","itemContainer","paddingLeft","paddingRight","paddingBottom","paddingTop","itemContainerMobile","link","subtitle","subtitle2","itemTitle","itemValue","addButton","lightGrayishBlue","greyTitle","grayishBlue3","tagStyles","checkboxWrapper","TasksComponent","useStyles","tasks","TrafficAnalysis"],"mappings":"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","file":"static/js/3.61fb6c01.chunk.js","sourcesContent":["import React from 'react';\nimport { Column } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 4,\n        cursor: 'pointer',\n        maxWidth: 350,\n        padding: '16px 32px 16px 32px',\n        '&:hover': {\n            borderColor: theme.color.lightBlue,\n            '&:nth-child(n) > span': {\n                color: theme.color.lightBlue\n            }\n        }\n    },\n    title: {\n        ...theme.typography.cardTitle,\n        color: theme.color.grayishBlue2,\n        marginBottom: 12,\n        minWidth: 102,\n        textAlign: 'center'\n    },\n    value: {\n        color: theme.color.veryDarkGrayishBlue,\n        fontWeight: 'bold',\n        fontSize: 40,\n        letterSpacing: '1px',\n        lineHeight: '50px',\n        textAlign: 'center'\n    }\n}));\n\nfunction MiniCardComponent({ className = '', title, value }) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const composedClassName = [classes.container, className].join(' ');\n    return (\n        <Column flexGrow={1} className={composedClassName} horizontal='center' vertical='center'>\n            <span className={classes.title}>{title}</span>\n            <span className={classes.value}>{value}</span>\n        </Column>\n    );\n}\n\nexport default MiniCardComponent;\n","import React from 'react';\nimport { Column, Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\n//import LineChart from 'react-svg-line-chart';\n\nconst data = [];\n\nfor (let x = 1; x <= 24; x++) {\n    data.push({ x: x, y: Math.floor(Math.random() * 100) });\n}\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 4,\n        cursor: 'pointer'\n    },\n    graphContainer: {\n        marginTop: 24,\n        marginLeft: 0,\n        marginRight: 0,\n        width: '100%'\n    },\n    graphSection: {\n        padding: 24\n    },\n    graphSubtitle: {\n        ...theme.typography.smallSubtitle,\n        color: theme.color.grayishBlue2,\n        marginTop: 4,\n        marginRight: 8\n    },\n    graphTitle: {\n        ...theme.typography.cardTitle,\n        color: theme.color.veryDarkGrayishBlue\n    },\n    legendTitle: {\n        ...theme.typography.smallSubtitle,\n        fontWeight: '600',\n        color: theme.color.grayishBlue2,\n        marginLeft: 8\n    },\n    separator: {\n        backgroundColor: theme.color.lightGrayishBlue2,\n        width: 1,\n        minWidth: 1\n    },\n    statContainer: {\n        borderBottom: `1px solid ${theme.color.lightGrayishBlue2}`,\n        padding: '24px 32px 24px 32px',\n        height: 'calc(114px - 48px)',\n        '&:last-child': {\n            border: 'none'\n        }\n    },\n    stats: {\n        borderTop: `1px solid ${theme.color.lightGrayishBlue2}`,\n        width: '100%'\n    },\n    statTitle: {\n        fontWeight: '600',\n        fontSize: 16,\n        lineHeight: '22px',\n        letterSpacing: '0.3px',\n        textAlign: 'center',\n        color: theme.color.grayishBlue2,\n        whiteSpace: 'nowrap',\n        marginBottom: 6\n    },\n    statValue: {\n        ...theme.typography.title,\n        textAlign: 'center',\n        color: theme.color.veryDarkGrayishBlue\n    }\n}));\n\nfunction TodayTrendsComponent() {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n\n    function renderLegend(color, title) {\n        return (\n            <Row vertical='center'>\n                <div style={{ width: 16, border: '2px solid', borderColor: color }}></div>\n                <span className={classes.legendTitle}>{title}</span>\n            </Row>\n        );\n    }\n\n    function renderStat(title, value) {\n        return (\n            <Column\n                flexGrow={1}\n                className={classes.statContainer}\n                vertical='center'\n                horizontal='center'\n            >\n                <span className={classes.statTitle}>{title}</span>\n                <span className={classes.statValue}>{value}</span>\n            </Column>\n        );\n    }\n\n    return (\n        <Row\n            flexGrow={1}\n            className={classes.container}\n            horizontal='center'\n            breakpoints={{ 1024: 'column' }}\n        >\n            <Column\n                wrap\n                flexGrow={7}\n                flexBasis='735px'\n                className={classes.graphSection}\n                breakpoints={{ 1024: { width: 'calc(100% - 48px)', flexBasis: 'auto' } }}\n            >\n                <Row wrap horizontal='space-between'>\n                    <Column>\n                        <span className={classes.graphTitle}>Todayâ€™s trends</span>\n                        <span className={classes.graphSubtitle}>as of 25 May 2019, 09:41 PM</span>\n                    </Column>\n                    {renderLegend(theme.color.lightBlue, 'Today')}\n                </Row>\n               \n            </Column>\n            \n           \n        </Row>\n    );\n}\n\nexport default TodayTrendsComponent;\n","import React from 'react';\nimport { Column, Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 4,\n        padding: '24px 32px 0px 32px',\n        height: '100%'\n    },\n    containerMobile: {\n        padding: '12px 16px 6px 16px !important'\n    },\n    itemContainer: {\n        marginLeft: -32,\n        marginRight: -32,\n        paddingLeft: 32,\n        paddingRight: 32,\n        paddingBottom: 18,\n        paddingTop: 18,\n        borderBottom: `1px solid ${theme.color.lightGrayishBlue2}`,\n        '&:last-child': {\n            borderBottom: 'none'\n        }\n    },\n    itemContainerMobile: {\n        marginLeft: -16,\n        marginRight: -16,\n        paddingLeft: 16,\n        paddingRight: 16\n    },\n    link: {\n        ...theme.typography.link\n    },\n    subtitle: {\n        ...theme.typography.smallSubtitle,\n        color: theme.color.grayishBlue2\n    },\n    subtitle2: {\n        color: theme.color.veryDarkGrayishBlue,\n        marginLeft: 2\n    },\n    title: {\n        ...theme.typography.cardTitle,\n        color: theme.color.veryDarkGrayishBlue\n    }\n}));\n\nfunction CardComponent(props) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const { title, link, subtitle, subtitleTwo, items, containerStyles } = props;\n    function renderItem(item, index) {\n        return (\n            <Column\n                className={classes.itemContainer}\n                key={`item-${index}`}\n                breakpoints={{ 426: classes.itemContainerMobile }}\n            >\n                {item}\n            </Column>\n        );\n    }\n\n    return (\n        <Column\n            flexGrow={1}\n            className={[classes.container, containerStyles].join(' ')}\n            breakpoints={{ 426: classes.containerMobile }}\n        >\n            <Row horizontal='space-between'>\n                <Column>\n                    <span className={classes.title}>{title}</span>\n                    <Row style={{ marginTop: 8, marginBottom: 16 }}>\n                        <span className={classes.subtitle}>{subtitle}</span>\n                        {subtitleTwo && (\n                            <span className={[classes.subtitle, classes.subtitle2].join(' ')}>\n                                {subtitleTwo}\n                            </span>\n                        )}\n                    </Row>\n                </Column>\n                <span className={classes.link}>{link}</span>\n            </Row>\n            {items.map(renderItem)}\n        </Column>\n    );\n}\n\nexport default CardComponent;\n","import React from 'react';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport CardComponent from 'components/cards/CardComponent';\n\nconst useStyles = createUseStyles((theme) => ({\n    itemTitle: {\n        ...theme.typography.itemTitle,\n        color: theme.color.veryDarkGrayishBlue\n    },\n    itemValue: {\n        color: theme.color.grayishBlue2\n    }\n}));\n\nfunction UnresolvedTicketsComponent({ containerStyles }) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n\n    function renderStat(title, value) {\n        return (\n            <Row horizontal='space-between' vertical='center'>\n                <span className={classes.itemTitle}>{title}</span>\n                <span className={[classes.itemTitle, classes.itemValue].join(' ')}>{value}</span>\n            </Row>\n        );\n    }\n\n    return (\n        <CardComponent\n            containerStyles={containerStyles}\n            title='Unresolved tickets'\n            link='View details'\n            subtitle='Group:'\n            subtitleTwo='Support'\n            items={[\n                renderStat('Waiting on Feature Request', 4238),\n                renderStat('Awaiting Customer Response', 1005),\n                renderStat('Awaiting Developer Fix', 914),\n                renderStat('Pending', 281)\n            ]}\n        />\n    );\n}\n\nexport default UnresolvedTicketsComponent;\n","import React, { useState } from 'react';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { IconCheckboxOn, IconCheckboxOff } from 'assets/icons';\nimport CardComponent from 'components/cards/CardComponent';\n\nconst useStyles = createUseStyles((theme) => ({\n    addButton: {\n        backgroundColor: theme.color.lightGrayishBlue,\n        color: theme.color.grayishBlue2,\n        fontSize: '20px !important',\n        padding: '7px !important'\n    },\n    itemTitle: {\n        ...theme.typography.itemTitle,\n        color: theme.color.veryDarkGrayishBlue\n    },\n    itemValue: {\n        color: theme.color.grayishBlue2\n    },\n    greyTitle: {\n        color: theme.color.grayishBlue3\n    },\n    tagStyles: {\n        borderRadius: 5,\n        cursor: 'pointer',\n        fontWeight: 'bold',\n        fontSize: 11,\n        letterSpacing: '0.5px',\n        lineHeight: '14px',\n        padding: '5px 12px 5px 12px'\n    },\n    checkboxWrapper: {\n        cursor: 'pointer',\n        marginRight: 16\n    }\n}));\n\nconst TAGS = {\n    URGENT: { text: 'URGENT', backgroundColor: '#FEC400', color: '#FFFFFF' },\n    NEW: { text: 'NEW', backgroundColor: '#29CC97', color: '#FFFFFF' },\n    DEFAULT: { text: 'DEFAULT', backgroundColor: '#F0F1F7', color: '#9FA2B4' }\n};\n\nfunction TasksComponent(props) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const [items, setItems] = useState([\n        { title: 'Finish ticket update', checked: false, tag: TAGS.URGENT },\n        {\n            title: 'Create new ticket example',\n            checked: false,\n            tag: TAGS.NEW\n        },\n        { title: 'Update ticket report', checked: true, tag: TAGS.DEFAULT }\n    ]);\n\n    function onCheckboxClick(index) {\n        setItems((prev) => {\n            const newItems = [...prev];\n            newItems[index].checked = newItems[index].checked ? false : true;\n            return newItems;\n        });\n    }\n    function getNextTag(current = 'URGENT') {\n        const tagLabels = ['URGENT', 'NEW', 'DEFAULT'];\n        const tagIndex = (tagLabels.indexOf(current) + 1) % 3;\n        return TAGS[tagLabels[tagIndex]];\n    }\n\n    function onTagClick(index) {\n        setItems((prev) => {\n            const newItems = [...prev];\n            newItems[index].tag = getNextTag(newItems[index].tag.text);\n            return newItems;\n        });\n    }\n\n    function onAddButtonClick() {\n        setItems((prev) => {\n            const newItems = [...prev];\n            newItems.push({\n                title: `Task ${newItems.length + 1}`,\n                checked: false,\n                tag: getNextTag()\n            });\n            return newItems;\n        });\n    }\n\n    function renderAddButton() {\n        return (\n            <Row\n                horizontal='center'\n                vertical='center'\n                className={[classes.tagStyles, classes.addButton].join(' ')}\n                onClick={onAddButtonClick}\n            >\n                +\n            </Row>\n        );\n    }\n\n    return (\n        <CardComponent\n            containerStyles={props.containerStyles}\n            title='Tasks'\n            link='View all'\n            subtitle='Today'\n            items={[\n                <Row horizontal='space-between' vertical='center'>\n                    <span className={[classes.itemTitle, classes.greyTitle].join(' ')}>\n                        Create new task\n                    </span>\n                    {renderAddButton()}\n                </Row>,\n                ...items.map((item, index) => (\n                    <TaskComponent\n                        classes={classes}\n                        index={index}\n                        item={item}\n                        onCheckboxClick={onCheckboxClick}\n                        onTagClick={onTagClick}\n                    />\n                ))\n            ]}\n        />\n    );\n}\n\nfunction TaskComponent({ classes, index, item = {}, onCheckboxClick, onTagClick }) {\n    const { tag = {} } = item;\n    return (\n        <Row horizontal='space-between' vertical='center'>\n            <Row>\n                <div className={classes.checkboxWrapper} onClick={() => onCheckboxClick(index)}>\n                    {item.checked ? <IconCheckboxOn /> : <IconCheckboxOff />}\n                </div>\n                <span className={classes.itemTitle}>{item.title}</span>\n            </Row>\n            <TagComponent\n                backgroundColor={tag.backgroundColor}\n                classes={classes}\n                color={tag.color}\n                index={index}\n                onClick={onTagClick}\n                text={tag.text}\n            />\n        </Row>\n    );\n}\n\nfunction TagComponent({ backgroundColor, classes, color, index, onClick, text }) {\n    return (\n        <Row\n            horizontal='center'\n            vertical='center'\n            style={{ backgroundColor, color }}\n            className={classes.tagStyles}\n            onClick={() => onClick(index)}\n        >\n            {text}\n        </Row>\n    );\n}\n\nexport default TasksComponent;\n","import React from 'react';\nimport { Column, Row } from 'simple-flexbox';\n\nimport MiniCardComponent from 'components/cards/MiniCardComponent';\nimport TodayTrendsComponent from './TodayTrendsComponent';\nimport UnresolvedTicketsComponent from './UnresolvedTicketsComponent';\nimport TasksComponent from './TasksComponent';\nimport { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n    \n   \n   \n   \n   \n    tasks: {\n        marginTop: 0,\n        '@media (max-width: 1024px)': {\n            marginTop: 30\n        }\n    }\n});\n\nfunction TrafficAnalysis() {\n    const classes = useStyles();\n    return (\n        <div>Traffic Analysis</div>\n    );\n}\n\nexport default TrafficAnalysis;\n","import TrafficAnalysis from './TrafficAnalysis';\n\nexport default TrafficAnalysis;\n"],"sourceRoot":""}